<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bde.exam.mapper.UserMapper">

    <resultMap id="userResultMap" type="com.bde.exam.model.UserModel">
        <id column="id" property="id" />
        <result column="user_id" property="userId"/>
        <result column="user_name" property="userName"/>
        <result column="user_sex" property="userSex"/>
        <result column="user_birthday" property="userBirthday"/>
        <result column="user_pwd" property="userPwd"/>
        <result column="user_pwd_ques" property="pwdQues"/>
        <result column="user_pwd_ans" property="pwdAns"/>
        <result column="user_profession" property="userProfession"/>
        <result column="user_prosition" property="userProsition"/>
    </resultMap>

    <!--<sql id="user_inf">-->
        <!--id id,-->
        <!--user_id userId,-->
        <!--user_name userName,-->
        <!--user_sex userSex,-->
        <!--user_birthday userBirthday,-->
        <!--user_pwd userPwd,-->
        <!--user_pwd_ques pwdQues,-->
        <!--user_pwd_ans pwdAns,-->
        <!--user_profession userProfession,-->
        <!--user_prosition userProsition-->
    <!--</sql>-->

    <sql id="user_inf">
        id,
        user_id,
        user_name,
        user_sex,
        user_birthday,
        user_pwd,
        user_pwd_ques,
        user_pwd_ans,
        user_profession,
        user_prosition
    </sql>

    <sql id="user_condition">
        <if test="userId != null">
            AND user_id = #{userId}
        </if>
        <if test="userName != null">
            AND user_name = #{userName}
        </if>
    </sql>

    <insert id="addUser" parameterType="com.bde.exam.model.UserModel">
        INSERT INTO exam_user
	      (user_id, user_name, user_sex, user_birthday, user_pwd, user_pwd_ques, user_pwd_ans, user_profession, user_prosition)
        VALUES
	      (#{userId}, #{userName}, #{userSex}, #{userBirthday}, #{userPwd}, #{pwdQues}, #{pwdAns}, #{userProfession}, #{userProsition});
    </insert>

    <delete id="deleteUser" parameterType="java.lang.Integer">
        DELETE FROM
          exam_user
        WHERE
          user_id = #{userId};
    </delete>

    <update id="updateUser" parameterType="com.bde.exam.model.UserModel">
        UPDATE
          exam_user
        SET
          user_id = #{userId}, user_name = #{userName}, user_sex = #{userSex}, user_birthday = #{userBirthday},
          user_pwd = #{userPwd}, user_pwd_ques = #{pwdQues}, user_pwd_ans = #{pwdAns},
          user_profession = #{userProfession}, user_prosition = #{userProsition}
        WHERE
          id = #{id};
    </update>

    <update id="updateProsition" parameterType="com.bde.exam.model.UserModel">
        UPDATE
          exam_user
        SET
          user_prosition = #{userProsition}
        WHERE
          user_id = #{userId} AND user_name = #{userName};
    </update>

    <!--分页-->
    <select id="queryUserByPage" parameterType="java.util.Map" resultMap="userResultMap">
        SELECT
          <include refid="user_inf"></include>
        FROM
          exam_user
          limit #{startRow, jdbcType=INTEGER}, #{pageSize, jdbcType=INTEGER};
    </select>

    <select id="queryUser" parameterType="com.bde.exam.model.UserModel" resultMap="userResultMap">
        SELECT
          <include refid="user_inf"></include>
        FROM
          exam_user
        WHERE
          user_id = #{userId}
    </select>

    <select id="queryUserCounts" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM exam_user;
    </select>

    <select id="queryUserByIds" parameterType="java.util.LinkedList" resultMap="userResultMap">
        SELECT
            <include refid="user_inf"></include>
        FROM
            exam_user
        <where>
            <foreach collection="list" item="id" open="id in (" close=")" separator=",">
                ${id}
            </foreach>
        </where>
    </select>
</mapper>